<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutSection_Text1" xml:space="preserve">
    <value>Easy measure</value>
  </data>
  <data name="AboutSection_Text10" xml:space="preserve">
    <value>Workloads distribution</value>
  </data>
  <data name="AboutSection_Text11" xml:space="preserve">
    <value>This is another problem to solve. When managers can’t see clearly the work/projects distribution between team's members wrong allocations can occur. This fact could implies the team unbalancing.</value>
  </data>
  <data name="AboutSection_Text12" xml:space="preserve">
    <value>Engagement with external technical communities</value>
  </data>
  <data name="AboutSection_Text13" xml:space="preserve">
    <value>In order to amplify the Microsoft technologies (to reach outside our boundaries), we need to find out some new  ways to engage with other communities Microsoft and non-Microsoft and invite then to collaborate with us in open source projects and related initiatives. This will be very impactful to all involved.</value>
  </data>
  <data name="AboutSection_Text2" xml:space="preserve">
    <value>Today is very important to measure the things. This need applies to all different areas in a company. In addition, receiving an optimized vision about resources allocation between different projects and individual workloads is critical for all (both the resources and their managers) because it allows the team to organize their routines, equalize work/life balance and being more effective in the deliverables.</value>
  </data>
  <data name="AboutSection_Text3" xml:space="preserve">
    <value>Furthermore, as Technical Evangelists (TEs) that maintain the focus on cloud computing scenarios and frequently need to show different aspects Microsoft's cloud platform to customers and partners in events and such, develop one web and mobile tool that uses completely our stack of technologies and it is delivered in the cloud could be very impactful to the team and to the community. This process could be very helpful for us in order to improve our technical skills.</value>
  </data>
  <data name="AboutSection_Text4" xml:space="preserve">
    <value>The external community engagement with Microsoft is another aspect that a development of a tool like that can be helpful. Once this project becomes open source, we can work very near to external communities in order to request their collaboration with us during the entire development process. Perhaps it could be a great entry point to us.</value>
  </data>
  <data name="AboutSection_Text5" xml:space="preserve">
    <value>Arda tool emerges like a good answer to all this questions. Our goal is highly concentered to use this process (development) and tool to address all this different needs, including some impact in Microsoft scorecard.</value>
  </data>
  <data name="AboutSection_Text6" xml:space="preserve">
    <value>Problems statement</value>
  </data>
  <data name="AboutSection_Text7" xml:space="preserve">
    <value>Understanding the team's needs is fundamental to create a pragmatic solution to solve it. This way, the follow items shows de main needs mapped.</value>
  </data>
  <data name="AboutSection_Text8" xml:space="preserve">
    <value>Measure the team’s capacity</value>
  </data>
  <data name="AboutSection_Text9" xml:space="preserve">
    <value>Which is the real delivery capacity of team? The answer to this question isn’t easy to be found. The great problem here is in fact of how to collect data with accuracy. This aspect is very important to provide to managers a right vision about team capacity.</value>
  </data>
  <data name="CollaborationSection_Text1" xml:space="preserve">
    <value>Collaboration</value>
  </data>
  <data name="FAQSection_Text1" xml:space="preserve">
    <value>Regarding workloads. What means "Expertise"?</value>
  </data>
  <data name="FAQSection_Text2" xml:space="preserve">
    <value>In a Workload context, the "Expertise" represents the main ability that you will develop through the workload execution.</value>
  </data>
  <data name="FAQSection_Text3" xml:space="preserve">
    <value>Example: You will implement a PoC in a customer enviroment. The PoC consists on build a web farm cluster based in virtual machines and load balancer. Probably in this case the expertise that will be developed is "Building Infra", given the nature of workload.</value>
  </data>
  <data name="FAQSection_Text4" xml:space="preserve">
    <value>All expertises</value>
  </data>
  <data name="FAQSection_Text5" xml:space="preserve">
    <value>&lt;strong&gt;Management:&lt;/strong&gt; Most general management possible in a team, involving different areas, people and technologies. A good example for this is an event organization, like TechEd.</value>
  </data>
  <data name="FAQSection_Text6" xml:space="preserve">
    <value>&lt;strong&gt;Project:&lt;/strong&gt; Applyable when the management refers only to an specific project inside of team. Here we have work similar to an PMO. A good example for workloads with this expertise is Arda project.</value>
  </data>
  <data name="GetSupportSection_Text1" xml:space="preserve">
    <value>Get Support</value>
  </data>
  <data name="HowToSection_Text1" xml:space="preserve">
    <value>How to</value>
  </data>
  <data name="Index_CoverSubtext" xml:space="preserve">
    <value>a &lt;strong&gt;open source&lt;/strong&gt; tool to manage workloads to awesome teams</value>
  </data>
  <data name="OverviewSection_Text1" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="WorkingOnThisText" xml:space="preserve">
    <value>We are working on this. Come back soon to get updates.</value>
  </data>
</root>