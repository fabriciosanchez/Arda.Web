<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutSection_Text1" xml:space="preserve">
    <value>Facilitar a medição do trabalho</value>
  </data>
  <data name="AboutSection_Text10" xml:space="preserve">
    <value>Distribuição de workloads</value>
  </data>
  <data name="AboutSection_Text11" xml:space="preserve">
    <value>Este é outro problema a ser resolvido. Quando os gerentes não possuem uma visão clara quanto à distribuição do trabalho / projetos entre os membros da equipe, alocações erradas podem ocorrer e este ste fato pode implicar em desequilíbrio para a equipe.</value>
  </data>
  <data name="AboutSection_Text12" xml:space="preserve">
    <value>Engajamento com comunidades técnicas</value>
  </data>
  <data name="AboutSection_Text13" xml:space="preserve">
    <value>Para amplificar o alcance das tecnologias da Microsoft (para chegar fora de nossos limites), precisamos descobrir novas maneiras de nos envolver com outras comunidades, Microsoft e não-Microsoft, e convidá-las então para colaborar conosco em projetos de código aberto e iniciativas relacionadas. Isso será muito positivo para todos os envolvidos.</value>
  </data>
  <data name="AboutSection_Text2" xml:space="preserve">
    <value>Hoje é muito importante medir as coisas e com o trabalho não é diferente. De forma geral, esta necessidade se aplica a todas as diferentes áreas de uma empresa. Além disso, receber uma visão otimizada sobre a alocação dos recursos (pessoas) entre diferentes projetos e cargas de trabalho torna-se cada vez mais crítico para todos (tanto para os profissionais quanto para seus gerentes), porque permite que a equipe organize suas rotinas e equalize o trabalho, de modo que as entregas relevantes para a empresa ocorram e ao mesmo tempo, que o profissional consiga ter uma boa qualidade de vida.</value>
  </data>
  <data name="AboutSection_Text3" xml:space="preserve">
    <value>Além disso, como evangelistas técnicos que mantêm seu o foco em cenários de computação em nuvem e freqüentemente precisam mostrar diferentes aspectos da plataforma de nuvem da Microsoft para clientes e parceiros em eventos e reuniões técnicas, desenvolver uma ferramenta web e móvel que utiliza completamente a nossa pilha de tecnologias e que é entregue no Microsoft Azure poderia ser muito impactante não apenas para nossa equipe, como para a comunidade técnica em geral. Além disso, no sentido de aprendizado, o Arda pode ajudar bastante, uma vez que seu código fonte é aberto (GitHub).</value>
  </data>
  <data name="AboutSection_Text4" xml:space="preserve">
    <value>O envolvimento da comunidade externa com a Microsoft é outro aspecto que o desenvolvimento de uma ferramenta como essa pode ser atender. Uma vez que este projeto se torne open source, podemos trabalhar muito perto de comunidades técnicas externas para solicitar sua colaboração conosco durante todo o processo de desenvolvimento. Talvez possa ser um ótimo ponto de sinergia.</value>
  </data>
  <data name="AboutSection_Text5" xml:space="preserve">
    <value>Arda surge como uma boa resposta para todos estes aspectos mencionados. Nosso objetivo está claramente concentrado na utilização deste processo (de desenvolvimento) gerado pela ferramenta para atender a todas estas diferentes necessidades, incluindo algum impacto no scorecard da Microsoft.</value>
  </data>
  <data name="AboutSection_Text6" xml:space="preserve">
    <value>O problema</value>
  </data>
  <data name="AboutSection_Text7" xml:space="preserve">
    <value>Compreender as necessidades da equipe é fundamental para criar soluções pragmáticas para endereçá-las. Desta forma, os itens a seguir mostram as principais necessidades já mapeadas.</value>
  </data>
  <data name="AboutSection_Text8" xml:space="preserve">
    <value>Medir a capacidade dos times</value>
  </data>
  <data name="AboutSection_Text9" xml:space="preserve">
    <value>Qual é a real capacidade de entrega da equipe? A resposta para esta pergunta não é fácil de ser encontrada. O grande problema aqui está no fato de como coletar dados com precisão. Este aspecto é muito importante para fornecer aos gerentes uma visão correta sobre a capacidade da equipe.</value>
  </data>
  <data name="Index_CoverSubtext" xml:space="preserve">
    <value>uma ferramenta de &lt;strong&gt;código aberto&lt;/strong&gt; para gestão de equipes</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Seja bem vindo(a) </value>
  </data>
</root>